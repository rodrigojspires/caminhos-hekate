services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: hekate-postgres
    environment:
      POSTGRES_USER: hekate
      POSTGRES_PASSWORD: hekate123
      POSTGRES_DB: hekate_db
      TZ: America/Sao_Paulo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Explicitly target the correct database to avoid defaulting to DB name = user (hekate)
      test: ["CMD-SHELL", "pg_isready -U hekate -d hekate_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hekate-network

  # Redis for queues and cache
  redis:
    image: redis:7-alpine
    container_name: hekate-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hekate-network

  # Evolution API for WhatsApp (Development)
  evolution:
    image: atendai/evolution-api:latest
    container_name: hekate-evolution
    environment:
      NODE_ENV: production
      AUTHENTICATION_TYPE: apikey
      AUTHENTICATION_API_KEY: ${EVOLUTION_API_KEY:-defaultapikey}
      DATABASE_ENABLED: true
      DATABASE_CONNECTION_URI: mongodb://evolution_mongo:27017/evolution
      DATABASE_CONNECTION_DB_PREFIX_NAME: evolution
      RABBITMQ_ENABLED: false
      CACHE_REDIS_ENABLED: true
      CACHE_REDIS_URI: redis://redis:6379
      CACHE_REDIS_PREFIX_KEY: evolution
    ports:
      - "8080:8080"
    depends_on:
      - evolution_mongo
      - redis
    networks:
      - hekate-network

  # MongoDB for Evolution API
  evolution_mongo:
    image: mongo:6
    container_name: hekate-evolution-mongo
    volumes:
      - evolution_mongo_data:/data/db
    networks:
      - hekate-network

  # MinIO for S3-compatible storage (Development)
  minio:
    image: minio/minio:latest
    container_name: hekate-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY:-minioadmin123}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - hekate-network

  # Nginx Reverse Proxy (Production-like setup)
  nginx:
    image: nginx:alpine
    container_name: hekate-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - hekate-network

  # Next.js Application (Development)
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: hekate-web
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hekate:hekate123@postgres:5432/hekate_db?schema=public
      REDIS_URL: redis://redis:6379
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-minioadmin}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-minioadmin123}
      S3_BUCKET: hekate-media
      EVOLUTION_API_URL: http://evolution:8080
      PRIVATE_UPLOAD_ROOT: /app/uploads
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
      - private_uploads_dev:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hekate-network

networks:
  hekate-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
  evolution_mongo_data:
  private_uploads_dev:
